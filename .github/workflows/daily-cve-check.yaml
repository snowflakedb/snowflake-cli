name: Daily CVE Check with JIRA Integration

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cve-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js for Snyk CLI
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install requests

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk to check for CVEs
        id: snyk_scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_GITHUB_INTEGRATION_TOKEN_PUBLIC_REPO }}
          SNYK_ORG: ${{ secrets.SNYK_ORG_ID_PUBLIC_REPO }}
        run: |
          snyk auth $SNYK_TOKEN

          echo "🔍 Running Snyk security scan on Snowflake CLI..."
          echo "📁 Scanning snyk/requirements.txt for production dependencies:"
          ls -la snyk/requirements.txt
          echo ""

          # Run Snyk scan and capture exit code
          set +e
          snyk test --file=snyk/requirements.txt --package-manager=pip --severity-threshold=medium --sarif-file-output=snyk-cve.sarif --project-name=snowflake-cli-production --skip-unresolved > snyk-output.txt 2>&1
          snyk_exit_code=$?
          set -e

          echo "Snyk exit code: $snyk_exit_code"

          # Exit code 1 means vulnerabilities found, exit code 2 means error
          if [ $snyk_exit_code -eq 2 ]; then
            echo "❌ Snyk scan failed"
            cat snyk-output.txt
            exit 1
          elif [ $snyk_exit_code -eq 1 ]; then
            echo "🚨 Security vulnerabilities found in production dependencies!"
            cat snyk-output.txt
            echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          elif [ $snyk_exit_code -eq 0 ]; then
            echo "✅ No security vulnerabilities found"
            echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Fix SARIF file format
        if: always()
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            # Replace undefined severity values with defaults for GitHub compatibility
            sed -i 's/"level": "undefined"/"level": "warning"/g' snyk-cve.sarif
            sed -i 's/"severity": "undefined"/"severity": "warning"/g' snyk-cve.sarif
            sed -i 's/"security-severity": "undefined"/"security-severity": "5.0"/g' snyk-cve.sarif
            sed -i 's/"security-severity": undefined/"security-severity": "5.0"/g' snyk-cve.sarif
          fi

      - name: Login to JIRA
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true'
        uses: atlassian/gajira-login@v3.0.1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Parse CVEs from SARIF
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true'
        id: parse_cves
        env:
          SARIF_FILE: snyk-cve.sarif
          CVE_OUTPUT_FILE: cves.json
        run: |
          python .github/scripts/parse_cves.py

      - name: Create JIRA tickets for CVEs
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true' && steps.parse_cves.outputs.has_cves == 'true'
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          python .github/scripts/create_jira_tickets.py cves.json SNOW-2402092 "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      - name: Print scan summary
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            echo "🚨 CVE scan completed - vulnerabilities found!"
            echo "📊 Total CVEs found: $(grep -c 'ruleId' snyk-cve.sarif || echo '0')"
            if [ "${{ steps.snyk_scan.outputs.vulnerabilities_found }}" == "true" ]; then
              echo "🎫 JIRA tickets created/updated (one per CVE)"
              echo "🔗 View tickets: ${{ secrets.JIRA_BASE_URL }}/issues/?jql=parent=SNOW-2402092 AND labels=automated"
            fi
          else
            echo "✅ CVE scan completed - no vulnerabilities found"
          fi
