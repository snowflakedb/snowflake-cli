name: Daily CVE Check with JIRA Integration

on:
  push:
    branches: [ daniszewski-NO-CONN-snyk-cve ]
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cve-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js for Snyk CLI
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk to check for CVEs
        id: snyk_scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_GITHUB_INTEGRATION_TOKEN_PUBLIC_REPO }}
          SNYK_ORG: ${{ secrets.SNYK_ORG_ID_PUBLIC_REPO }}
        run: |
          snyk auth $SNYK_TOKEN

          echo "🔍 Running Snyk security scan on Snowflake CLI..."

          # Use the existing snyk/requirements.txt for scanning
          echo "📁 Using snyk/requirements.txt for dependency scanning:"
          ls -la snyk/requirements.txt
          echo ""

          # Run Snyk scan and capture exit code
          set +e
          snyk test --file=snyk/requirements.txt --severity-threshold=medium --sarif-file-output=snyk-cve.sarif --project-name=snowflake-cli-production > snyk-output.txt 2>&1
          snyk_exit_code=$?
          set -e

          echo "Snyk exit code: $snyk_exit_code"

          # Exit code 1 means vulnerabilities found, exit code 2 means error
          if [ $snyk_exit_code -eq 2 ]; then
            echo "❌ Snyk scan failed"
            cat snyk-output.txt
            exit 1
          elif [ $snyk_exit_code -eq 1 ]; then
            echo "🚨 Security vulnerabilities found in production dependencies!"
            cat snyk-output.txt
            echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          elif [ $snyk_exit_code -eq 0 ]; then
            echo "✅ No security vulnerabilities found"
            echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Fix SARIF file format
        if: always()
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            # Replace undefined severity values with defaults for GitHub compatibility
            sed -i 's/"level": "undefined"/"level": "warning"/g' snyk-cve.sarif
            sed -i 's/"severity": "undefined"/"severity": "warning"/g' snyk-cve.sarif
            sed -i 's/"security-severity": "undefined"/"security-severity": "5.0"/g' snyk-cve.sarif
            sed -i 's/"security-severity": undefined/"security-severity": "5.0"/g' snyk-cve.sarif
          fi

      - name: Checkout JIRA actions
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true'
        uses: actions/checkout@v4
        with:
          repository: snowflakedb/gh-actions
          ref: jira_v1
          token: ${{ secrets.SNOWFLAKE_GITHUB_TOKEN }}
          path: ./gh-actions
          persist-credentials: false

      - name: Login to JIRA
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true'
        uses: atlassian/gajira-login@v3.0.1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Create JIRA ticket for security vulnerabilities
        if: steps.snyk_scan.outputs.vulnerabilities_found == 'true'
        id: create_jira
        uses: atlassian/gajira-create@v3.0.1
        with:
          project: SNOW
          issuetype: Bug
          summary: '🚨 Security Vulnerabilities Found in Snowflake CLI Dependencies'
          description: |
            **Automated Security Alert from Daily CVE Scan**

            📅 **Date:** ${{ github.event.repository.updated_at }}
            🔗 **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            📊 **Repository:** ${{ github.repository }}
            🌟 **Branch:** ${{ github.ref_name }}

            **Summary:**
            Daily automated security scan has detected vulnerabilities in Snowflake CLI dependencies that require immediate attention.

            **Vulnerability Details:**
            - Scan Tool: Snyk Security Scanner
            - Project: snowflake-cli-production
            - Severity Threshold: Medium and above
            - Scan Results: See workflow logs for detailed vulnerability information

            **Next Steps:**
            1. Review the detailed vulnerability report in the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            2. Assess impact and priority of each vulnerability
            3. Update affected dependencies to secure versions
            4. Re-run security scan to verify fixes

            **SARIF Report:**
            The complete vulnerability report is available in the GitHub Security tab under Code Scanning alerts.

            _This ticket was automatically created by the Daily CVE Check workflow._
          fields: '{"customfield_11401":{"id":"14723"},"labels":["dp-snowcli","security","cve","automated"],"parent":{"key":"SNOW-1747450"}, "components":[{"id":"18653"}],"priority":{"name":"High"},"assignee":{"name":"triage-snowcli-dl"}}'
      - name: Print scan summary
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            echo "🚨 CVE scan completed - vulnerabilities found!"
            echo "📊 Total CVEs found: $(grep -c 'ruleId' snyk-cve.sarif || echo '0')"
            if [ "${{ steps.snyk_scan.outputs.vulnerabilities_found }}" == "true" ]; then
              echo "🎫 JIRA ticket created: ${{ steps.create_jira.outputs.issue }}"
              echo "🔗 View ticket: ${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create_jira.outputs.issue }}"
            fi
          else
            echo "✅ CVE scan completed - no vulnerabilities found"
          fi
