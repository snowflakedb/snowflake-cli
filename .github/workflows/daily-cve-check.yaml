name: Daily CVE Check

on:
  schedule:
    # Run daily at 8 AM UTC (adjust timezone as needed)
    - cron: '0 8 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  security-events: write

jobs:
  cve-scan:
    runs-on: ubuntu-latest
    # Only restrict scheduled runs to main branch, allow manual runs on any branch
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Automatically uses the triggering branch

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js for Snyk CLI
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk to check for CVEs
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_GITHUB_INTEGRATION_TOKEN_PUBLIC_REPO }}
          SNYK_ORG: ${{ secrets.SNYK_ORG_ID_PUBLIC_REPO }}
        run: |
          snyk auth $SNYK_TOKEN

          # Run Snyk scan and capture exit code
          set +e
          snyk test --file=snyk/requirements.txt --severity-threshold=medium --sarif-file-output=snyk-cve.sarif
          snyk_exit_code=$?
          set -e

          # Exit code 1 means vulnerabilities found (expected), exit code 2 means error
          if [ $snyk_exit_code -eq 2 ]; then
            echo "❌ Snyk scan failed"
            exit 1
          fi

      - name: Fix SARIF file format
        if: always()
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            # Replace undefined severity values with defaults for GitHub compatibility
            sed -i 's/"level": "undefined"/"level": "warning"/g' snyk-cve.sarif
            sed -i 's/"severity": "undefined"/"severity": "warning"/g' snyk-cve.sarif
            sed -i 's/"security-severity": "undefined"/"security-severity": "5.0"/g' snyk-cve.sarif
            sed -i 's/"security-severity": undefined/"security-severity": "5.0"/g' snyk-cve.sarif
          fi

      - name: Check if SARIF file exists
        id: check_sarif
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            echo "sarif_exists=true" >> $GITHUB_OUTPUT
            echo "✅ SARIF file found"
          else
            echo "sarif_exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ SARIF file not found - Snyk may have failed or found no issues"
          fi

      - name: Upload CVE results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: steps.check_sarif.outputs.sarif_exists == 'true'
        with:
          sarif_file: snyk-cve.sarif
          category: daily-cve-scan

      - name: Print scan summary
        run: |
          if [ -f "snyk-cve.sarif" ]; then
            echo "✅ CVE scan completed - results uploaded to GitHub Security tab"
          else
            echo "✅ CVE scan completed - no vulnerabilities found"
          fi
